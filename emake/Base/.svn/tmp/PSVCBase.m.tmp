#import "PSVCBase.h"
#import "YHMQTTClient.h"
#import "chatNewModel.h"
#import "chatUserModel.h"
#import "chatBodyModel.h"
#import "MessageModel.h"
#import "UserModel.h"
#import "FMDBManager.h"
#import "SDChatMessage.h"
#import "YHShoppingCartNewViewController.h"
#import "YBPopupMenu.h"
#import "YHMainViewController.h"
#import "YHMainMessageCenterViewController.h"
#import "YHMissonCreatSuccessView.h"
#import "YHTabBarViewController.h"
#import "YHSixTeamViewController.h"
#import "YHMineViewController.h"
#import "YHMineShareCodeViewController.h"
#import "ChatNewViewController.h"
#import "YHMainViewController.h"
#import "YHCertificationStateViewController.h"
#import "YHCertificationStateOriginalViewController.h"
static NSString *lastTimeSend;
@interface PSVCBase ()<YHMQTTClientDelegate,YBPopupMenuDelegate>
{
    NSInteger count;
    UILabel *bglable;
}
@property (nonatomic, strong) UIButton * backButton;
@property (nonatomic, strong) UIButton * topButton;
@property (nonatomic,assign)BOOL isShowShare;
@property (nonatomic, strong) UIButton * rightNavBtn;
@property (nonatomic, strong) UIButton * informationCardBtn;
@property (nonatomic, retain) NSArray * Titles;
@property (nonatomic, retain) NSArray * ICONS;
@property (nonatomic, assign) NSInteger IconWidth;
@property (nonatomic, strong) UIButton * settingBtn;

@end

@implementation PSVCBase
- (UIButton *)backButton
{
    if (_backButton == nil) {
        _backButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [_backButton setImage:[UIImage imageNamed:@"direction_leftNew"] forState:UIControlStateNormal];
        _backButton.frame = CGRectMake(-0, 0, 40, 40);
        _backButton.imageEdgeInsets = UIEdgeInsetsMake(0, -10, 0, 10 );
        [_backButton addTarget:self action:@selector(back:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _backButton;
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [YHMQTTClient sharedClient].delegate = self;
    self.navigationController.navigationBarHidden = NO;
    NSInteger EventCount = [YHMQTTClient sharedClient].EventCount;
    if (EventCount>0) {
        if (EventCount>99){
            EventCount = 99;
        }
        [self.informationCardBtn showBadgeWithStyle:WBadgeStyleNumber value:EventCount animationType:WBadgeAnimTypeNone];
        self.informationCardBtn.badgeCenterOffset = CGPointMake(WidthRate(-5), HeightRate(10));
    }else{
        [self.informationCardBtn clearBadge];
    }
    
    
    if (self.isShowShare == YES) {

    NSInteger messageCount = [YHMQTTClient sharedClient].MessageCount;
    
    if (messageCount>0) {
        if (messageCount>99){
            messageCount = 99;
        }
        bglable.hidden = NO;
        [self addItem:self.settingBtn Bage:messageCount];
    }else{
        bglable.hidden = YES;
    }
    }
    count = [YHMQTTClient sharedClient].MessageCount;
}
- (void)viewDidDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillChangeFrameNotification object:nil];
    [self.view endEditing:YES];
}
- (void)viewDidLoad {
    
    [super viewDidLoad];
    [self layoutCustomNavigationBar];
    self.view.backgroundColor = [UIColor whiteColor];
    if (@available(iOS 11.0, *)){
    }else{
        self.automaticallyAdjustsScrollViewInsets = NO;
    }
}
- (void)layoutCustomNavigationBar{
    
    [self.navigationController.navigationBar setBarTintColor:[UIColor colorWithHexString:StatusAndTopBarBackgroundColor]];
    //navbar背景
    UINavigationBar *navBar = [UINavigationBar appearance];
    [navBar setBackgroundColor:[UIColor colorWithHexString:StatusAndTopBarBackgroundColor]];
    
    self.navigationController.navigationBar.titleTextAttributes = @{NSForegroundColorAttributeName:[UIColor blackColor],NSFontAttributeName : [UIFont boldSystemFontOfSize:16]};
    //去除边框
//    [self.navigationController.navigationBar setBackgroundImage:[[UIImage alloc] init] forBarPosition:UIBarPositionAny barMetrics:UIBarMetricsDefault];
//    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:self.backButton];
}

- (void)back:(UIButton *)button
{
    [self.navigationController popViewControllerAnimated:YES];
}
- (UIToolbar *)addToolbar
{
    UIToolbar *toolbar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, 35)];
    toolbar.tintColor = [UIColor blueColor];
    toolbar.backgroundColor = [UIColor whiteColor];
    UIBarButtonItem *space = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *bar = [[UIBarButtonItem alloc] initWithTitle:@"完成" style:UIBarButtonItemStylePlain target:self action:@selector(textFieldDone)];
    toolbar.items = @[space, bar];
    return toolbar;
}

- (void)textFieldDone{
    
    [self.view endEditing:YES];
}
- (void)addRightNavBtn:(NSString *)title{
    self.rightNavBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    self.rightNavBtn.frame = CGRectMake(20, 0, 30, 30);
    [self.rightNavBtn setTitle:title forState:UIControlStateNormal];
    self.rightNavBtn.titleLabel.font = SYSTEM_FONT(AdaptFont(13));
    [self.rightNavBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    self.rightNavBtn.imageEdgeInsets = UIEdgeInsetsMake(0, 10, 0, 0 );
    [self.rightNavBtn addTarget:self action:@selector(rightBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:self.rightNavBtn];
    
}
- (void)addRightNavBtnWithImage:(NSString *)imageName{
    self.rightNavBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    self.rightNavBtn.frame = CGRectMake(10, 0, 30, 30);
    [self.rightNavBtn setBackgroundImage:[UIImage imageNamed:imageName] forState:UIControlStateNormal];
    self.rightNavBtn.imageEdgeInsets = UIEdgeInsetsMake(0, 10, 0, 0 );
    [self.rightNavBtn addTarget:self action:@selector(rightBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:self.rightNavBtn];
}
-(UIButton *)TopButton:(UIView *)bgview
{
    if (self.topButton ==nil) {
      UIButton *  topBtn = [[UIButton alloc] init];
        [topBtn setImage:[UIImage imageNamed:@"huidaodingbu"] forState:UIControlStateNormal];
        topBtn.imageView.contentMode = UIViewContentModeScaleAspectFit;
        [bgview addSubview:topBtn];
        [topBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.bottom.mas_offset(HeightRate(-75));
            make.right.mas_offset(WidthRate(-5));
            make.width.mas_offset(WidthRate(40));
            make.height.mas_offset(HeightRate(40));
        }];
        self.topButton = topBtn;
    }
    return self.topButton;
}
- (void)setRightBtnTitle:(NSString *)title{
    
    [self.rightNavBtn setTitle:title forState:UIControlStateNormal];
}
- (void)addRigthDetailButtonTeamIsShowCart:(BOOL)isShow{
    
    [self addRigthDetailButtonIsShowCart:false];
    NSString *userType = [[NSUserDefaults standardUserDefaults] objectForKey:LOGIN_USERTYPE];
    if ([userType isEqualToString:@"1"]) {
        self.Titles  =  @[@"首页", @"消息"];
        self.ICONS =  @[@"shouye-g",@"xiaoxi-g"];
        
    }else{
        self.Titles  =  @[@"首页", @"消息"];
        self.ICONS =  @[@"shouye-g",@"xiaoxi-g"];
        self.IconWidth = 160;
    }
}
- (void)addRigthDetailButtonIsShowShare:(BOOL)isShow{
    
    self.isShowShare = isShow;
    [self addRigthDetailButtonIsShowCart:false];
}
- (void)addRigthDetailButtonIsShowCart:(BOOL)isShow{
    self.Titles =  @[@"首页", @"消息"];
    self.ICONS =  @[@"shouye-g",@"xiaoxi-g"];
    self.IconWidth = 120;
    self.informationCardBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.informationCardBtn setImage:[UIImage imageNamed:@"xiaoxi-r"] forState:UIControlStateNormal];
    [self.informationCardBtn addTarget:self action:@selector(showMenuView) forControlEvents:UIControlEventTouchUpInside];
    [self.informationCardBtn sizeToFit];
    
    UIBarButtonItem *informationCardItem = [[UIBarButtonItem alloc] initWithCustomView:self.informationCardBtn];
    
    UIBarButtonItem *fixedSpaceBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fixedSpaceBarButtonItem.width = WidthRate(5);
    
    UIButton *settingBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    settingBtn.hidden = isShow;
    if (self.isShowShare == false) {
        [settingBtn setImage:[UIImage imageNamed:@"gouwuche-b"] forState:UIControlStateNormal];
    }else{
        NSInteger messageCount = [YHMQTTClient sharedClient].MessageCount;
        if (messageCount>0) {
            if (messageCount>99){
                messageCount = 99;
            }
            bglable.hidden = NO;
           [self addItem:settingBtn Bage:messageCount];
        }else{
            bglable.hidden = YES;
        }
        [settingBtn setImage:[UIImage imageNamed:@"shouyekefu"] forState:UIControlStateNormal];
    }
    [settingBtn addTarget:self action:@selector(goShoppingCartVC) forControlEvents:UIControlEventTouchUpInside];
    [settingBtn sizeToFit];
    self.settingBtn = settingBtn;
    UIBarButtonItem *settingBtnItem = [[UIBarButtonItem alloc] initWithCustomView:settingBtn];
    self.navigationItem.rightBarButtonItems  = @[informationCardItem,fixedSpaceBarButtonItem,settingBtnItem];
}

-(UILabel *)addItem:(UIView *)item Bage:(NSInteger)count
{
    if(item){
        CGFloat widthF;
        CGFloat heightF;
        
        if (count>99) {
            
            widthF = 16;
            heightF = 14;
            
        }else
        {
            widthF = 14;
            heightF = 14;
        }
    count = count>99?+99:count;
        
    if (bglable ==nil) {
        bglable = [[UILabel alloc] init];
        bglable.translatesAutoresizingMaskIntoConstraints = NO;
        bglable.clipsToBounds = YES;
        bglable.layer.cornerRadius = 7;
        bglable.backgroundColor = [UIColor redColor];
        bglable.textAlignment = NSTextAlignmentCenter;
        bglable.textColor = [UIColor whiteColor];
        bglable.font = [UIFont systemFontOfSize:9];
        [item addSubview:bglable];
        [bglable PSSetTop:0];
        [bglable PSSetRight:WidthRate(-widthF/2.0)];
        [bglable PSSetSize:widthF Height:heightF];
    }
    bglable.text = [NSString stringWithFormat:@"%ld",count];

    return bglable;
    }else{
        return nil;
    }
}
- (void)showMenuView{
    
    NSInteger EventCount = [YHMQTTClient sharedClient].EventCount;
    [YBPopupMenu showRelyOnView:self.informationCardBtn titles:self.Titles icons:self.ICONS menuWidth:self.IconWidth messgaeCount:EventCount  delegate:self];
}
- (void)goShoppingCartVC{
    if (self.isShowShare) {
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Chat" bundle:nil];
        ChatNewViewController *vc = [storyboard instantiateViewControllerWithIdentifier:@"Chat"];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }else{
        BOOL isContue =   [self CertificationState];
        if (isContue == NO) {
            return;
        }
        if (self.navigationController.viewControllers) {
            for (UIViewController *vc in self.navigationController.viewControllers) {
                if ([vc isKindOfClass:[YHShoppingCartNewViewController class]]) {
                    [self.navigationController popToViewController:vc animated:YES];
                    return;
                }
            }
        }
        YHShoppingCartNewViewController  *vc  = [[YHShoppingCartNewViewController alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        vc.isBottomViewLow = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
}
- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
    
    [self.view endEditing:YES];
}
- (void)rightBtnClick:(UIButton *)sender{
    
}
- (void)didReceiveMemoryWarning {
    
    [super didReceiveMemoryWarning];
}
#pragma mark --- YBPopupMenuDelegate
- (void)ybPopupMenuDidSelectedAtIndex:(NSInteger)index ybPopupMenu:(YBPopupMenu *)ybPopupMenu{
    switch (index) {
            //回到首页
        case 0:
            for (UIViewController *vc in self.navigationController.viewControllers) {
                if ([vc isKindOfClass:[YHMainViewController class]]) {
                    
                    [self.navigationController popToViewController:vc animated:YES];
                }
            }
            self.tabBarController.selectedIndex = 0;
            [self.navigationController popToRootViewControllerAnimated:YES];
            break;
            //回到消息
        case 1:{
            
            YHMainMessageCenterViewController *vc = [[YHMainMessageCenterViewController alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 2:{
            
            YHMainMessageCenterViewController *vc = [[YHMainMessageCenterViewController alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        default:
            break;
    }
}
#pragma mark========YHMQTTClientDelegate
-(void)onMessgae:(MQTTMessage *)messgae{
    if (messgae.payload) {
        
        NSDictionary *payload = [NSJSONSerialization JSONObjectWithData:messgae.payload options:0 error:nil];
        BOOL isContain = false;
        for (UIViewController *vc in self.navigationController.viewControllers) {
            if ([vc isKindOfClass:[ChatNewViewController class]]) {
                ChatNewViewController *chatVC = (ChatNewViewController *)vc;
                [chatVC onMessgae:messgae];
                isContain = true;
                return;
            }
        }
        chatNewModel *model = [chatNewModel mj_objectWithKeyValues:payload];
        chatBodyModel *body = [chatBodyModel mj_objectWithKeyValues:model.MessageBody];
        chatUserModel *form = [chatUserModel mj_objectWithKeyValues:model.From];
        NSString *timeString = model.UpdateTime;
        form.DisplayName =  form.DisplayName.length>0?form.DisplayName:@"11";
        if ([body.Type isEqualToString:@"Text"]){
            [self addToFMDB:body.Text messageId:model.MessageId sender:@"0" sendTime:timeString msgType:@"SEND_TEXT" staffName:form.DisplayName staffAvata:form.Avatar contractNo:@"" ContractState:@"" isIncludeTax:@""];
        }else if ([body.Type isEqualToString:@"Image"]){
            [self addToFMDB:@"" messageId:model.MessageId sender:@"0" sendTime:timeString msgType:@"SEND_IMAGE" staffName:form.DisplayName staffAvata:form.Avatar contractNo:@"" ContractState:@"" isIncludeTax:@""];
        }else if ([body.Type isEqualToString:@"MutilePart"]){
            NSString *msg = [NSString stringWithFormat:@"%@$¥%@$¥%@$¥%@",body.Text,body.ImageUrl,body.Url,body.ContractType];
            [self addToFMDB:msg messageId:model.MessageId sender:@"0" sendTime:timeString msgType:@"SEND_MutilePart" staffName:form.DisplayName staffAvata:form.Avatar contractNo:body.Contract ContractState:body.ContractState isIncludeTax:body.IsIncludeTax];
        }else if ([body.Type isEqualToString:@"Goods"]){
            UserModel *user = [UserModel new];
            user.serversAvata = form.Avatar;
            user.isOutgoing = false;
            [self addToFMDB:body.Text messageId:model.MessageId sender:@"0" sendTime:timeString msgType:@"SEND_Goods" staffName:form.DisplayName staffAvata:form.Avatar contractNo:@"" ContractState:@"" isIncludeTax:@""];
        }else if ([body.Type isEqualToString:@"Voice"]){
            
            UserModel *user = [UserModel new];
            user.serversAvata = form.Avatar;
            user.isOutgoing = false;
            if (![[NSFileManager defaultManager] fileExistsAtPath:[Tools getVoicePath:model.MessageId]]) {
                NSData *data = [NSData dataWithContentsOfURL:[NSURL URLWithString:body.Voice]];
                if (data.bytes>0&&data) {
                    [data writeToFile:[Tools getVoicePath:model.MessageId] atomically:YES];
                }
            }
            [self addToFMDB:body.VoiceDuration messageId:model.MessageId sender:@"0" sendTime:timeString msgType:@"SEND_Voice" staffName:form.DisplayName staffAvata:form.Avatar contractNo:@"" ContractState:@"" isIncludeTax:@""];
        }
        if (self.isShowShare == YES) {
        count++;
        if (count>0) {
            if (count>99){
                count = 99;
            }
            bglable.hidden = NO;
                 [self addItem:self.settingBtn Bage:count];
            }else{
                bglable.hidden = YES;
            };
        }
    }
}
- (void)addToFMDB:(NSString *)messageText messageId:(NSString *)messageId sender:(NSString *)sender sendTime:(NSString *)sendTime msgType:(NSString *)sendType staffName:(NSString *)staffName staffAvata:(NSString *)staffAvata contractNo:(NSString *)contractNo ContractState:(NSString *)ContractState isIncludeTax:(NSString *)isIncludeTax{
    contractNo = contractNo.length==0?@"":contractNo;
    ContractState = ContractState.length==0?@"":ContractState;
    isIncludeTax = isIncludeTax.length==0?@"":isIncludeTax;
    NSDictionary *dic =@{@"msg":messageText,@"msgID":messageId,@"sender":sender,@"sendTime":sendTime,@"msgType":sendType,@"staffName":staffName,@"staffAvata":staffAvata,@"contractNo":contractNo,@"ContractState":ContractState,@"isIncludeTax":isIncludeTax};
    SDChatMessage *msg =[SDChatMessage chatMessageWithDic:dic];
    [[FMDBManager sharedManager] addMessage:msg];
}
- (void)onEvent:(MQTTMessage *)messgae{
    NSDictionary *payload = [NSJSONSerialization JSONObjectWithData:messgae.payload options:0 error:nil];
    chatNewModel *model = [chatNewModel mj_objectWithKeyValues:payload];
    chatBodyModel *body = [chatBodyModel mj_objectWithKeyValues:model.MessageBody];
    if ([body.EventType isEqualToString:@"CARD_REVIEW"]){
        if (body.UserState) {
            [self getUserInfo1];
            NSString *state = [NSString stringWithFormat:@"%ld",body.UserState];
            if ([state isEqualToString:@"3"]){
                [[NSNotificationCenter defaultCenter] postNotificationName:NotificatonRefreshCartData object:nil];
            }
            [[NSUserDefaults standardUserDefaults] setObject:state forKey:LOGIN_USERCARDSTATE];
            [[NSUserDefaults standardUserDefaults] setObject:body.BusinessCategory forKey:USERSELECCATEGORY];
            [[NSUserDefaults standardUserDefaults] setObject:body.BusinessCategoryName forKey:USERSELECCATEGORYName];
            [[NSUserDefaults standardUserDefaults] synchronize];
        }
        NSString *Type = [NSString stringWithFormat:@"%ld",(long)body.UserType];
        [[NSUserDefaults standardUserDefaults] setObject:Type forKey:LOGIN_USERTYPE];
        [[NSUserDefaults standardUserDefaults] synchronize];
        [[JZUserNotification sharedNotification] addNotificationWithCategroy2:body.EventText];
    }else if ([body.EventType isEqualToString:@"TEAM_REQUEST"]){
        [YHMQTTClient sharedClient].EventCount = [YHMQTTClient sharedClient].EventCount + 1;
        NSInteger EventCount = [YHMQTTClient sharedClient].EventCount;
        if (EventCount>0) {
            if (EventCount>99){
                EventCount = 99;
            }
            [self.informationCardBtn showBadgeWithStyle:WBadgeStyleNumber value:EventCount animationType:WBadgeAnimTypeNone];
            self.informationCardBtn.badgeCenterOffset = CGPointMake(WidthRate(-5), HeightRate(10));
        }else{
            [self.informationCardBtn clearBadge];
        }
        if ([[Tools currentViewController] isKindOfClass:[YHMineViewController class]]) {
            YHMineViewController *vc = (YHMineViewController *)[Tools currentViewController];
            if (EventCount>0) {
                if (EventCount>99) {
                    EventCount = 99;
                }
                vc.messageCount.hidden = false;
                vc.messageCount.text = [NSString stringWithFormat:@"%ld",(long)EventCount];
            }else{
                vc.messageCount.hidden = true;
            }
        }else if([[Tools currentViewController] isKindOfClass:[YHMainViewController class]]) {
            YHMainViewController *vc = (YHMainViewController *)[Tools currentViewController];
            UIImageView *infomationImage = (UIImageView *)[vc.infomationView viewWithTag:100];
            if (EventCount>0) {
                if (EventCount>99) {
                    EventCount = 99;
                }
                vc.infomationView.hidden = false;
                [infomationImage showBadgeWithStyle:WBadgeStyleNumber value:EventCount animationType:WBadgeAnimTypeNone];
                infomationImage.badgeCenterOffset = CGPointMake(WidthRate(-7), HeightRate(4));
            }else{
                [infomationImage clearBadge];
            }
        }
        YHMissonCreatSuccessView *vc  = [[YHMissonCreatSuccessView alloc]initJoinSuccess:body.RealName missionName:body.MobileNumber content:nil];
        vc.block = ^(NSString *text) {
            if(![text isEqualToString:@"thinkAgain"]){
                [self joinTeam:body.MobileNumber withState:@"" andRefNo:body.RefNo];
            }
        };
        [vc showAnimated];
    }else if ([body.EventType isEqualToString:@"TEAM_STATE"]){
        NSString *state = [NSString stringWithFormat:@"%ld",body.UserType];
        [[NSUserDefaults standardUserDefaults] setObject:state forKey:LOGIN_USERTYPE];
        [[NSUserDefaults standardUserDefaults] synchronize];
        [[JZUserNotification sharedNotification] addNotificationWithCategroy2:body.EventText];
    }
}
- (void)joinTeam:(NSString*)phone withState:(NSString *)state andRefNo:(NSString *)RefNo{
    [[Tools currentViewController].view showWait:@"加载中" viewType:CurrentView];
    NSDictionary *parameter = @{@"MobileNumber":phone};
    [[YHJsonRequest shared] joinTeam:parameter SuccessBlock:^(NSString *successMessage) {
        [[Tools currentViewController].view hideWait:CurrentView];
        [[NSUserDefaults standardUserDefaults] setObject:@"1" forKey:LOGIN_USERTYPE];
        [[NSUserDefaults standardUserDefaults] synchronize];
        if ([self isKindOfClass:[YHMineViewController class]]) {
            YHMineViewController *my = (YHMineViewController *)self;
                if (my.myTableView) {
                    [my.myTableView reloadData];
                }
        }
    } fialureBlock:^(NSString *errorMessages) {
        [[Tools currentViewController].view hideWait:CurrentView];
        [[Tools currentViewController].view makeToast:errorMessages duration:1.0 position:CSToastPositionCenter];
    }];
}
//判断审核状态
-(BOOL)CertificationState
{
    if (![[[NSUserDefaults standardUserDefaults] objectForKey:LOGIN_USERCARDSTATE] isEqualToString:@"3"]){
        NSString *state =  [[NSUserDefaults standardUserDefaults] objectForKey:LOGIN_USERCARDSTATE];
        if ([state isEqualToString:@"1"]) {
            YHCertificationStateOriginalViewController *vc = [[YHCertificationStateOriginalViewController alloc] init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            return NO;
            
        }else if ([state isEqualToString:@"2"]) {
            NSString *timeStr = [[NSUserDefaults standardUserDefaults] objectForKey:USERSTATECommitDate];
            YHCertificationStateViewController *vc = [[YHCertificationStateViewController alloc] init];
            vc.successDate = timeStr;
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            return NO;
        }else if ([state isEqualToString:@"4"]){
            NSString *resason =  [[NSUserDefaults standardUserDefaults] objectForKey:USERSTATEFailReason];
            YHCertificationStateViewController *vc = [[YHCertificationStateViewController alloc] init];
            vc.failReason = resason;
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
        return YES;
    }
    return YES;
}
- (void)getUserInfo1{
    [[YHJsonRequest shared] getUserInfoSuccessBlock:^(UserInfoModel *userInfo) {
        NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
        [userDefaults setObject:userInfo.AuditRemark forKey:USERSTATEFailReason];
        [userDefaults setObject:userInfo.EditWhen forKey:USERSTATECommitDate];
        [userDefaults synchronize];
    } fialureBlock:^(NSString *errorMessages) {
        [self.view makeToast:errorMessages];
    }];
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
